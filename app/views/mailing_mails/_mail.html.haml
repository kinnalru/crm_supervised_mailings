- type = mail.mailable_type.to_s.downcase
%li[mail]{ mails_highlightable(dom_id(mail, :tools), {}, mail.status) }
  
  - if mail.status == "new"
    .strip{:style => "background:bisque;"} #{t(mail.status)}
  - else
    .strip{:style => "background:palegreen;"} #{t(mail.status)}
  
  .tools{ invisible, :id => dom_id(mail, :tools) }
    - unless mail.status == "sent"	
      = link_to_mail_edit(mail) << " | "
      = link_to_mail_confirm(mail)
        
  .indent
    - if mail.status == "sent"
      = t(:mailing_sent, :models => t(type), :time_ago => time_ago_in_words(mail.sent_at), :user => (mail.user.id == @current_user.id ? t(:me) : h(mail.user.full_name)))
    - else
      - if mail.needs_update == true
        = image_tag("/plugin_assets/crm_supervised_mailings/images/info.png", :size => "16x16", :style => "vertical-align: middle")
        = t(:mailing_from_needs_data, :models => t(type), :information => mail.needs_update_help)
      - else
        = t(:mailing_from_ready, :models => t(type))
    %tt
      - if mail.status == "new"
        = " - " << t(:added_by, :time_ago => time_ago_in_words(mail.created_at), :user => (mail.user.id == @current_user.id ? t(:me) : h(mail.user.full_name)))
    %dt{ :style => "padding: 2px 0px 0px 0px" }
    - if mail.status == "new"      
      = render :partial => "#{type}s/#{type}", :locals => { type.to_sym => mail.mailable }
      %script{:type =>  'text/javascript'}  
        = render :update do |page|
          = page.hide "tools_#{type}_#{mail.mailable_id}".to_sym
    - else
      = get_asset_link(mail.mailable) 